# ==================================== #
# docker.yml                           #
# canvas2's new distribution workflow  #
# ==================================== #

# Define Name
name: Docker Deploy

# Description:
#   This actions workflow was designed to compile our image and upload it to
#   the Github Container Registry. It also shells into our server and tells
#   it to update.

#
# ===== [ Triggers ] ==========================================================
#

# NOTE: Originally this was supposed to have an 'on_workflow' trigger so it
#       would only run after test passes. However there was no reliable way
#       to test this, so I ditched it. Now it just runs on tagged releases.

on:
  push:
    tags:
    - '*'

#
# ===== [ Jobs ] ==============================================================
#

jobs:

  # 1.) Build Script
  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    steps:

    # 1.1.) Set up workspace
    - name: Set up workspace
      uses: actions/checkout@v1

    # 1.2) Auth with GHCR
    - name: Authenticate with GHCR
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ secrets.GHCR_USERNAME }}
        password: ${{ secrets.GHCR_TOKEN }}
      
    # 1.3) Set up Docker build
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    # 1.4) Build and Push
    - name: Build and Push
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: ghcr.io/azure-agst/canvas2:latest
  
  # 2.) Deploy Script
  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    if: ${{ false }} # NOTE: Archive doesnt have a server, skip!
    needs: build
    steps:

    # 2.1.) SSH script
    # Uses SSH to pull main on server, only on new commits in main
    # Auditing: https://github.com/appleboy/ssh-action
    - name: SSH & Deploy
      uses: appleboy/ssh-action@master
      with:
        host:  ${{ secrets.HOSTNAME }}
        username:  ${{ secrets.USERNAME }}
        key: ${{ secrets.PRIVATE_KEY }}
        script: bash ~/docker_start.sh
  